# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Asset {
  bidPrice: Float!
  currentPrice: Float!
  id: Float!
  quantity: Float!
  record: Record!
  stock: Stock!
  yield: Float!
}

input AssetInput {
  bidPrice: Float!
  quantity: Float!
  stock_id: Float!
}

type AssetOutput {
  bidPrice: Float!
  currentPrice: Float!
  id: Float!
  quantity: Float!
  stock: StockOutputDTO!
  yield: Float!
}

type CommonOutPut {
  error: String
  message: String
  ok: Boolean!
  statusCode: Float
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type JwtOutputDto {
  access_token: String
  error: String
  message: String
  ok: Boolean!
  refresh_token: String
  statusCode: Float
}

input LoginInputDTO {
  email: String!
  password: String!
}

type Mutation {
  changePassword(code: Float!, email: String!, newPassword: String!): CommonOutPut!
  createRecord(input: RecordCreateInputDTO!): RecordCreateOutputDTO!
  createShare(input: StockInputDTO!): StockCreateOutPutDTO!
  createUser(input: SignUpInputDTO!): CommonOutPut!
  deleteInvestDetail(id: Int!): CommonOutPut!
  deleteMyRecord(id: Int!): CommonOutPut!
  editMyRecord(input: RecordEditInputDTO!): RecordRetrieveOutputDTO!
  EmailForchangePassword(email: String!): CommonOutPut!
  getStocks: SharesOutPutDTO!
  login(input: LoginInputDTO!): JwtOutputDto!
}

type Query {
  getMyRecord(id: Int!): RecordRetrieveOutputDTO!
  getMyRecords: RecordListOutputDTO!
  hello(data: String): String!
  refresh: JwtOutputDto!
}

type Record {
  assets: [Asset!]!
  contents: String!
  id: Float!
  title: String!
  user: User!
}

input RecordCreateInputDTO {
  assetDetail: [AssetInput!]!
  contents: String!
  title: String!
}

type RecordCreateOutputDTO {
  error: String
  message: String
  ok: Boolean!
  record: RecordOutPut
  statusCode: Float
}

input RecordEditInputDTO {
  assetDetail: AssetInput!
  record_id: Float!
}

type RecordListOutputDTO {
  error: String
  message: String
  ok: Boolean!
  record: [RecordOutPut!]
  statusCode: Float
}

type RecordOutPut {
  assets: [AssetOutput!]
  contents: String!
  createAt: DateTime!
  id: Float!
  title: String!
  updateAt: DateTime!
  userId: Float!
}

type RecordRetrieveOutputDTO {
  error: String
  message: String
  ok: Boolean!
  record: [RecordOutPut!]
  statusCode: Float
}

type SharesOutPutDTO {
  error: String
  message: String
  ok: Boolean!
  statusCode: Float
  stocks: [StockOutputDTO!]!
}

input SignUpInputDTO {
  email: String!
  password: String!
}

type Stock {
  id: Float!
  investedIn: Asset!
  name: String!
  ticker: String!
}

type StockCreateOutPutDTO {
  error: String
  message: String
  ok: Boolean!
  statusCode: Float
  stock: Stock!
}

input StockInputDTO {
  name: String!
  ticker: String!
}

type StockOutputDTO {
  createdAt: DateTime!
  id: Float!
  name: String!
  price: Float!
  ticker: String!
  updatedAt: DateTime!
}

type User {
  email: String!
  id: Float!
  isVerified: Boolean!
  password: String!
  records: [Record!]!
  refreshToken: String!
  verificationCode: Float!
}
